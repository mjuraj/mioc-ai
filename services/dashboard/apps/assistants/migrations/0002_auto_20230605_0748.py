# Generated by Django 3.2.16 on 2023-06-05 07:48

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('managers', '0001_initial'),
        ('assistants', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='assistantconfiguration',
            name='default_manager',
            field=models.ForeignKey(default='default-manager', on_delete=django.db.models.deletion.RESTRICT, to='managers.manager', verbose_name='Owner'),
        ),
        migrations.AddField(
            model_name='assistantconfiguration',
            name='language_code',
            field=models.CharField(choices=[('en', 'en'), ('hr', 'hr')], default='en', help_text='Language of model input data.', max_length=255),
        ),
        migrations.AddField(
            model_name='assistantconfiguration',
            name='max_tokens',
            field=models.IntegerField(default=120, help_text='Max length of generated replies. 1 token is approx. 4 characters.', validators=[django.core.validators.MaxValueValidator(1000), django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AddField(
            model_name='assistantconfiguration',
            name='model',
            field=models.CharField(choices=[('GPT-3', 'GPT-3'), ('GPT-3.5', 'GPT-3.5'), ('GPT-4', 'GPT-4')], default='GPT-3', help_text='OpenAI model to use.', max_length=255),
        ),
        migrations.AddField(
            model_name='assistantconfiguration',
            name='temperature',
            field=models.FloatField(default=0.8, help_text='Measure of response creativity, from 0 (strictest) to 1 (most creative).', validators=[django.core.validators.MaxValueValidator(2.0), django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AddField(
            model_name='assistantconfiguration',
            name='top_p',
            field=models.FloatField(default=1.0, help_text='Alternative to temperature (should be set to 1.0 if top p is used and vice versa). Follows the same scale: from 0 (strictest) to 1 (most creative)', validators=[django.core.validators.MaxValueValidator(1.0), django.core.validators.MinValueValidator(0.0)]),
        ),
    ]
