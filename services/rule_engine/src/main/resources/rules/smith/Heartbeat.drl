package rules.smith;

import agents.Smith;
import signals.AddReview;
import signals.RequestSummary;
import signals.NewEmailEntry;
import config.Settings;

import com.mindsmiths.ruleEngine.model.Heartbeat;
import com.mindsmiths.ruleEngine.util.Log;
import com.mindsmiths.ruleEngine.util.Agents;

import com.mindsmiths.gsheetsAdapter.GSheetsAdapterAPI
import com.mindsmiths.gsheetsAdapter.reply.Spreadsheet

import java.time.ZoneId;

// Connecting to google spreadsheet
rule "Get Google Sheets"
    when
        Heartbeat(now: timestamp) from entry-point "signals"
        agent: Smith(lastTableUpdate == null || lastTableUpdate before[30s] now)
    then
        modify(agent){
            setLastTableUpdate(now)
        };
        GSheetsAdapterAPI.getSpreadsheet();
end

rule "Start processing a summary for Principal"
    when
        signal: RequestSummary(fromTimestamp: fromTimestamp) from entry-point "signals"
        agent: Smith(summaryRequested == false)
    then
        Log.info("Received RequestSumary; requesting spreadsheet for processing...");
        modify(agent) { 
            setSummaryRequested(true),
            setSummaryFromTimestamp(fromTimestamp)
        };
        GSheetsAdapterAPI.getSpreadsheet();
        delete(signal);
end

// Rule for processing the sheet
rule "Process Sheet"
    salience 10
    when
        spreadsheet: Spreadsheet() from entry-point "signals"
        agent: Smith()
    then
        agent.processSpreadsheet(spreadsheet);
end

rule "Make a summary from spreadsheet"
    when
        spreadsheet: Spreadsheet() from entry-point "signals"
        agent: Smith(summaryRequested == true)
    then
        Log.info("Smith is processing summary for Principal...");
        modify(agent) { setSummaryRequested(false); }
        agent.generateSummaryFromData(spreadsheet);
        delete(spreadsheet);
end

rule "Add Review"
    when
        signal: AddReview() from entry-point "signals"
        agent: Smith()
    then
        agent.addReviewToSheet(signal.getEmail(), signal.getGender(), signal.getAge(), signal.getRating(), signal.getFeedback(), signal.getTimestamp().atZone(ZoneId.of(Settings.DEFAULT_TIME_ZONE)).toInstant().toEpochMilli());
        delete(signal);
end

rule "Create a new email entry"
    when
        signal: NewEmailEntry() from entry-point "signals"
        agent: Smith()
    then
        agent.addNewEmail(signal.getEmail());
        delete(signal);
end